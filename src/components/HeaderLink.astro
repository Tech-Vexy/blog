---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const currentPath = Astro.url.pathname;

// Normalize paths for comparison
const hrefString = href?.toString() || '';
const normalizeHref = hrefString.endsWith('/') ? hrefString : hrefString + '/';
const normalizeCurrentPath = currentPath.endsWith('/') ? currentPath : currentPath + '/';

const isActive = normalizeCurrentPath === normalizeHref || 
                 (hrefString === '/' && (normalizeCurrentPath === '/' || normalizeCurrentPath === ''));
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-flex;
		text-decoration: none;
		color: hsl(var(--muted-foreground));
		font-weight: 500;
		padding: 0.5rem 0.75rem;
		border-radius: var(--radius);
		transition: all 0.2s ease;
		font-size: 0.875rem;
		align-items: center;
	}
	
	a:hover {
		color: hsl(var(--foreground));
		background: hsl(var(--muted) / 0.5);
	}
	
	a.active {
		color: hsl(var(--primary));
		font-weight: 600;
		background: hsl(var(--muted) / 0.8);
	}
	
	a.active:hover {
		background: hsl(var(--muted));
	}
</style>
