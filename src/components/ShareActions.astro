---
export interface Props {
  title: string;
  url: string;
}

const { title, url } = Astro.props;
const encodedTitle = encodeURIComponent(title);
const encodedUrl = encodeURIComponent(url);
---

<div class="share-actions">
  <button class="bookmark-btn" id="bookmarkBtn" title="Bookmark this post">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"></path>
    </svg>
  </button>
  
  <button class="share-btn" id="shareBtn" title="Share this post">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="18" cy="5" r="3"></circle>
      <circle cx="6" cy="12" r="3"></circle>
      <circle cx="18" cy="19" r="3"></circle>
      <line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line>
      <line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>
    </svg>
  </button>
  
  <div class="share-menu" id="shareMenu">
    <a href={`https://twitter.com/intent/tweet?text=${encodedTitle}&url=${encodedUrl}`} target="_blank" rel="noopener" class="share-link">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
      </svg>
      Twitter
    </a>
    <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`} target="_blank" rel="noopener" class="share-link">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
      </svg>
      LinkedIn
    </a>
    <button class="share-link copy-link" id="copyLink">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect>
        <path d="M4 16c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h8c1.1 0 2 .9 2 2v2"></path>
      </svg>
      Copy Link
    </button>
  </div>
</div>

<style>
  .share-actions {
    position: fixed;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    z-index: 100;
  }

  .bookmark-btn,
  .share-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    color: #f0f0f0;
    cursor: pointer;
    transition: all 0.2s ease;
    backdrop-filter: blur(10px);
  }

  .bookmark-btn:hover,
  .share-btn:hover {
    background: rgba(139, 92, 246, 0.8);
    border-color: rgba(139, 92, 246, 0.5);
    transform: scale(1.05);
  }

  .bookmark-btn.bookmarked {
    background: rgba(139, 92, 246, 0.9);
    border-color: rgba(139, 92, 246, 0.7);
  }

  .bookmark-btn.bookmarked svg {
    fill: currentColor;
  }

  .share-menu {
    position: absolute;
    right: 60px;
    top: 48px;
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.5rem;
    padding: 0.5rem;
    min-width: 140px;
    opacity: 0;
    visibility: hidden;
    transform: translateX(10px);
    transition: all 0.2s ease;
    backdrop-filter: blur(20px);
  }

  .share-menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
  }

  .share-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    color: #f0f0f0;
    text-decoration: none;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    transition: background-color 0.2s ease;
    border: none;
    background: none;
    cursor: pointer;
    width: 100%;
    text-align: left;
  }

  .share-link:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  @media (max-width: 1200px) {
    .share-actions {
      position: static;
      transform: none;
      flex-direction: row;
      justify-content: center;
      margin: 2rem 0;
    }

    .share-menu {
      position: absolute;
      right: auto;
      left: 50%;
      top: 60px;
      transform: translateX(-50%) translateY(-10px);
    }

    .share-menu.active {
      transform: translateX(-50%) translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const bookmarkBtn = document.getElementById('bookmarkBtn');
    const shareBtn = document.getElementById('shareBtn');
    const shareMenu = document.getElementById('shareMenu');
    const copyLink = document.getElementById('copyLink');
    
    const currentUrl = window.location.href;
    const postTitle = document.title;
    
    // Bookmark functionality
    const bookmarkKey = `bookmark_${currentUrl}`;
    const isBookmarked = localStorage.getItem(bookmarkKey) === 'true';
    
    if (isBookmarked) {
      bookmarkBtn?.classList.add('bookmarked');
    }
    
    bookmarkBtn?.addEventListener('click', () => {
      const isCurrentlyBookmarked = bookmarkBtn.classList.contains('bookmarked');
      
      if (isCurrentlyBookmarked) {
        localStorage.removeItem(bookmarkKey);
        bookmarkBtn.classList.remove('bookmarked');
      } else {
        localStorage.setItem(bookmarkKey, 'true');
        bookmarkBtn.classList.add('bookmarked');
      }
    });
    
    // Share menu toggle
    shareBtn?.addEventListener('click', (e) => {
      e.stopPropagation();
      shareMenu?.classList.toggle('active');
    });
    
    // Close share menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!shareMenu?.contains(e.target as Node) && !shareBtn?.contains(e.target as Node)) {
        shareMenu?.classList.remove('active');
      }
    });
    
    // Copy link functionality
    copyLink?.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(currentUrl);
        const originalText = copyLink.textContent;
        copyLink.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="20,6 9,17 4,12"></polyline>
          </svg>
          Copied!
        `;
        
        setTimeout(() => {
          copyLink.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect>
              <path d="M4 16c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h8c1.1 0 2 .9 2 2v2"></path>
            </svg>
            Copy Link
          `;
        }, 2000);
        
        shareMenu?.classList.remove('active');
      } catch (err) {
        console.error('Failed to copy link:', err);
      }
    });
    
    // Native share API fallback
    if (navigator.share && shareBtn) {
      const nativeShareBtn = document.createElement('button');
      nativeShareBtn.className = 'share-link';
      nativeShareBtn.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
          <polyline points="16,6 12,2 8,6"></polyline>
          <line x1="12" y1="2" x2="12" y2="15"></line>
        </svg>
        Share
      `;
      
      nativeShareBtn.addEventListener('click', async () => {
        try {
          await navigator.share({
            title: postTitle,
            url: currentUrl
          });
          shareMenu?.classList.remove('active');
        } catch (err) {
          console.error('Error sharing:', err);
        }
      });
      
      shareMenu?.appendChild(nativeShareBtn);
    }
  });
</script>